import matplotlib
matplotlib.use('Agg')
import matplotlib.pyplot as plt
import numpy as np
import itertools

class Profile():
    """
    Plots all kinds of pynbody related profiles.

    Args:
    p: list of pynbody profile objects
    """
    def __init__(self, p, w=14, h=12, nrows=0, ncols=0, name=''):
        self.p = p
        self.N = len(self.p)
        self.name = name

        def geometry():
            r = np.floor(np.sqrt(self.N))
            c = r
            r_iter, c_iter = itertools.cycle(2), itertools.cycle(2)
            c_iter.next()
            while r*c<self.N:
                r += r_iter.next()
                c += c_iter.next()
            print("Nrows ", r, " Ncols ", c)
            return r, c

        if nrows==0 or ncols==0:
            nrows, ncols = geometry()
        self.fig, self.axis = plt.subplots(nrows=nrows, ncols=ncols, figsize=(w,h))

    def set_title(title):
        self.fig.suptitle(title)
        
    def set_name(name):
        self.name = name

    def set_axis(idx, xlabel, ylabel, xscale='linear', yscale='linear'):
        """
        idx can be either a single value or a tuple, depending on the total number of profiles
        """
        if self.N>2:
            indexes = idx[0], idx[1]
        else:
            indexes = idx
        self.axis[indexes].set_xscale(xscale)
        self.axis[indexes].set_yscale(yscale)
        self.axis[indexes].set_xlabel(xlabel)
        self.axis[indexes].set_ylabel(ylabel)

    def set_properties(title, xlabel, ylabel, xscale='linear', yscale='linear'):
        self.set_title(title)
        for i in range(nrows):
            for j in range(ncols):
                self.set_axis((i,j), xlabel, ylabel, xscale, yscale)

    def savefig(x=self.name):
        self.fig.savefig(x)
